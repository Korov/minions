import pymysql.cursors
from loguru import logger

logger.add('mysql.log', rotation="100 MB",
           format="{time:YYYY-MM-DD HH:mm:ss.SSS} - {thread.name} - {file} - {level} - {name}:{function}:{line} {message}",
           level="INFO")

connection = pymysql.connect(host='localhost',
                             user='root',
                             password='rizhiyi&2014',
                             database='rizhiyi_system',
                             cursorclass=pymysql.cursors.DictCursor)

results = []

i = 0
with connection:
    with connection.cursor() as cursor:
        # Read a single record
        # sql = "SELECT * FROM `siem_loophole_log_migration_bak` limit 3000000, 800"
        sql = "SELECT * FROM `siem_loophole_log_migration_bak` where id in (5190472, 8403231, 6513934, 8766655, 3094365, 6573975, 4159037, 5372458, 3354804, 876092, 3548954, 5143846, 958971, 4349497, 2995294, 100226, 2851688, 4872796, 6113979, 882094, 4383538, 3792378, 5820651, 7389972, 5783859, 789624, 5284485, 1807419, 2448040, 4652705, 7398862, 474990, 4286391, 5154441, 9736007, 1933983, 8886483, 4486673, 2827267, 8708145, 3979527, 8434434, 8399533, 7658236, 4687854, 2690166, 2223706, 556806, 5376945, 280768, 2246310, 9836624, 9127634, 3072321, 822261, 3053260, 6327025, 8745011, 4973899, 3919405, 4490660, 6696912, 9663710, 1123478, 2165046, 6154888, 6120214, 5016311, 467627, 6739454, 1159958, 1189479, 4846884, 79486, 8951586, 2026646, 1403167, 8202664, 6465602, 6107444, 5190742, 3357212, 7814415, 4887973, 7182967, 7638991, 3432809, 2976335, 9412544, 1379132, 7089817, 7002960, 2420998, 9177236, 5698961, 8338894, 4594948, 8346200, 6924236, 8012408, 3573986, 352699, 9935524, 647940, 9048833, 9210339, 7695660, 8960423, 1714306, 3562840, 2481420, 5849297, 2949185, 9528911, 4398732, 1405045, 8248600, 2020583, 2526480, 1079635, 8013892, 6407024, 337830, 8216068, 7096149, 3428247, 2810469, 2651161, 4856775, 7788214, 7999511, 2304222, 969829, 6714055, 7015065, 362020, 1638493, 5375608, 5109059, 4876846, 6644158, 6746966, 2129158, 5246228, 3400899, 6946800, 9677890, 6194819, 7135976, 6476432, 4725372, 9193186, 280294, 3578960, 7385965, 4698080, 3618542, 4439572, 2472997, 6167636, 3250213, 7681025, 5305577, 3625783, 4433733, 782099, 9690412, 8704298, 4117976, 2705703, 904372, 6043444, 2550742, 7460493, 7260249, 7283007, 8979200, 6543023, 1481963, 9579905, 8756188, 8892159, 1767067, 586406, 1469484, 1225886, 8442296, 749598, 5629077, 5554592, 254263, 3651936, 9295715, 6095524, 7934102, 5995786, 9219209, 1225977, 291899, 4468125, 1694534, 4416448, 3569978, 9571974, 6480860, 3635168, 7101156, 5552527, 9841295, 8400265, 2335210, 5354028, 952673, 1875861, 3631427, 99961, 8279266, 1081307, 1824338, 7950908, 3555863, 2090855, 6473664, 3873734, 6390976, 8937808, 5363059, 3664534, 8513624, 9595464, 5899845, 4523601, 4683017, 2530981, 3848187, 994710, 7451281, 4535712, 7602039, 7475971, 13983, 6977310, 303490, 856276, 5412422, 7020460, 4659202, 7519240, 6101924, 6482481, 377197, 9204814, 4661952, 2997962, 46373, 2835017, 5668308, 4016274, 4466256, 2416220, 2915073, 4248870, 7999945, 7667533, 931149, 6581330, 2891334, 4091605, 2813624, 9687347, 6540391, 2484266, 5847605, 1307646, 5174849, 6065056, 3317839, 3908580, 9104695, 5893370, 5413385, 1034846, 1546774, 3153341, 8431781, 5572931, 7480039, 7678892, 8023695, 9647426, 5793605, 7796116, 2739392, 8735994, 1187129, 1241465, 7840032, 2059104, 4954416, 9557092, 8641335, 5676771, 2618094, 5969203, 8316278, 8322666, 2483868, 2278880, 4049540, 6638308, 7670448, 8637036, 1370404, 708588, 5135511, 6198814, 2615647, 5377249, 8180266, 9434218, 5774631, 2370013, 5018912, 1584287, 4957757, 3077948, 7866308, 209128, 430367, 8732088, 6412343, 2454207, 390062, 8344931, 4888081, 1138574, 9773762, 121694, 5146625, 2471306, 1943413, 5862670, 8182184, 7091235, 1185624, 4374809, 3526464, 440971, 3770778, 2970096, 6806018, 8726211, 2078393, 1754750, 2715929, 9698230, 6917185, 6617946, 1520838, 8680727, 944532, 6908606, 5988882, 2287612, 392961, 2728153, 1528839, 3682686, 3972692, 5105735, 413759, 3052415, 6091529, 9357982, 6709961, 7522243, 190134, 7042869, 1638160, 5236571, 596993, 1791942, 3235897, 1810338, 12101, 6810039, 7793671, 9757055, 2432333, 33397, 5517790, 9260981, 6927827, 2607417, 9683018, 3929954, 4824829, 3946170, 4174856, 4016938, 1100478, 8753376, 4598797, 7002329, 2016207, 6155702, 3310040, 3069099, 8479763, 1456123, 2125509, 7206366, 865698, 5096527, 1920930, 4611494, 3880503, 9182887, 4631285, 8218487, 2992809, 6483401, 4982200, 7800926, 4016588, 8225348, 8656344, 237311, 6882658, 4351507, 307362, 6926191, 7925238, 521092, 8249757, 5501410, 2238408, 8701244, 7106072, 7067846, 5658809, 1362886, 308871, 5683260, 3493444, 5042393, 7859744, 8772868, 1422499, 7369896, 4568051, 429569, 3501923, 9557355, 1931545, 4047805, 7856441, 67654, 5690626, 2657043, 6556056, 7051635, 2328843, 321494, 6353651, 1048516, 9230343, 5597238, 7499266, 2021225, 3059936, 6086316, 8686992, 9605801, 1239927, 5007816, 2533705, 6848344, 8814982, 7618789, 7400490, 1237962, 3616166, 5860256, 1588241, 4484332, 9787773, 6299692, 1527723, 7027810, 5297891, 4382415, 2802376, 7962493, 1321579, 3568998, 952599, 97069, 5981427, 9096349)"
        # sql = "SELECT * FROM `siem_loophole_log_migration_bak` where id in (40000, 40001, 40002, 40003, 40004, 40005, 40006, 40007, 40008, 40009, 40010, 40011, 40012, 40013, 40014, 40015, 40016, 40017, 40018, 40019, 40020, 40021, 40022, 40023, 40024, 40025, 40026, 40027, 40028, 40029, 40030, 40031, 40032, 40033, 40034, 40035, 40036, 40037, 40038, 40039, 40040, 40041, 40042, 40043, 40044, 40045, 40046, 40047, 40048, 40049, 40050, 40051, 40052, 40053, 40054, 40055, 40056, 40057, 40058, 40059, 40060, 40061, 40062, 40063, 40064, 40065, 40066, 40067, 40068, 40069, 40070, 40071, 40072, 40073, 40074, 40075, 40076, 40077, 40078, 40079, 40080, 40081, 40082, 40083, 40084, 40085, 40086, 40087, 40088, 40089, 40090, 40091, 40092, 40093, 40094, 40095, 40096, 40097, 40098, 40099, 40100, 40101, 40102, 40103, 40104, 40105, 40106, 40107, 40108, 40109, 40110, 40111, 40112, 40113, 40114, 40115, 40116, 40117, 40118, 40119, 40120, 40121, 40122, 40123, 40124, 40125, 40126, 40127, 40128, 40129, 40130, 40131, 40132, 40133, 40134, 40135, 40136, 40137, 40138, 40139, 40140, 40141, 40142, 40143, 40144, 40145, 40146, 40147, 40148, 40149, 40150, 40151, 40152, 40153, 40154, 40155, 40156, 40157, 40158, 40159, 40160, 40161, 40162, 40163, 40164, 40165, 40166, 40167, 40168, 40169, 40170, 40171, 40172, 40173, 40174, 40175, 40176, 40177, 40178, 40179, 40180, 40181, 40182, 40183, 40184, 40185, 40186, 40187, 40188, 40189, 40190, 40191, 40192, 40193, 40194, 40195, 40196, 40197, 40198, 40199, 40200, 40201, 40202, 40203, 40204, 40205, 40206, 40207, 40208, 40209, 40210, 40211, 40212, 40213, 40214, 40215, 40216, 40217, 40218, 40219, 40220, 40221, 40222, 40223, 40224, 40225, 40226, 40227, 40228, 40229, 40230, 40231, 40232, 40233, 40234, 40235, 40236, 40237, 40238, 40239, 40240, 40241, 40242, 40243, 40244, 40245, 40246, 40247, 40248, 40249, 40250, 40251, 40252, 40253, 40254, 40255, 40256, 40257, 40258, 40259, 40260, 40261, 40262, 40263, 40264, 40265, 40266, 40267, 40268, 40269, 40270, 40271, 40272, 40273, 40274, 40275, 40276, 40277, 40278, 40279, 40280, 40281, 40282, 40283, 40284, 40285, 40286, 40287, 40288, 40289, 40290, 40291, 40292, 40293, 40294, 40295, 40296, 40297, 40298, 40299, 40300, 40301, 40302, 40303, 40304, 40305, 40306, 40307, 40308, 40309, 40310, 40311, 40312, 40313, 40314, 40315, 40316, 40317, 40318, 40319, 40320, 40321, 40322, 40323, 40324, 40325, 40326, 40327, 40328, 40329, 40330, 40331, 40332, 40333, 40334, 40335, 40336, 40337, 40338, 40339, 40340, 40341, 40342, 40343, 40344, 40345, 40346, 40347, 40348, 40349, 40350, 40351, 40352, 40353, 40354, 40355, 40356, 40357, 40358, 40359, 40360, 40361, 40362, 40363, 40364, 40365, 40366, 40367, 40368, 40369, 40370, 40371, 40372, 40373, 40374, 40375, 40376, 40377, 40378, 40379, 40380, 40381, 40382, 40383, 40384, 40385, 40386, 40387, 40388, 40389, 40390, 40391, 40392, 40393, 40394, 40395, 40396, 40397, 40398, 40399, 40400, 40401, 40402, 40403, 40404, 40405, 40406, 40407, 40408, 40409, 40410, 40411, 40412, 40413, 40414, 40415, 40416, 40417, 40418, 40419, 40420, 40421, 40422, 40423, 40424, 40425, 40426, 40427, 40428, 40429, 40430, 40431, 40432, 40433, 40434, 40435, 40436, 40437, 40438, 40439, 40440, 40441, 40442, 40443, 40444, 40445, 40446, 40447, 40448, 40449, 40450, 40451, 40452, 40453, 40454, 40455, 40456, 40457, 40458, 40459, 40460, 40461, 40462, 40463, 40464, 40465, 40466, 40467, 40468, 40469, 40470, 40471, 40472, 40473, 40474, 40475, 40476, 40477, 40478, 40479, 40480, 40481, 40482, 40483, 40484, 40485, 40486, 40487, 40488, 40489, 40490, 40491, 40492, 40493, 40494, 40495, 40496, 40497, 40498, 40499)"
        cursor.execute(sql)
        old_result = cursor.fetchall()

        query_sql_list = []
        query_or_sql_list = []

        domain_name_set = set()
        name_set = set()
        source_set = set()
        hex_host_set = set()
        port_set = set()
        for result in old_result:
            domain_name = result['domain_name']
            domain_name = domain_name.replace("'", "\\'")
            domain_name_set.add(domain_name)
            name = result['name']
            name = name.replace("'", "\\'")
            name_set.add(name)
            source = result['source']
            source = source.replace("'", "\\'")
            source_set.add(source)
            hex_host_set.add(result['hex_host'])
            port_set.add(str(result['port']))
            query_sql = f"select * from siem_loophole_log_migration where(`hex_host`='{result['hex_host']}' and `port`={result['port']} and `domain_name`='{domain_name}' and `name`='{name}' and `source`='{source}')"
            query_sql_list.append(query_sql)
            query_or_sql = f"(`hex_host`='{result['hex_host']}' and `port`={result['port']} and `domain_name`='{domain_name}' and `name`='{name}' and `source`='{source}')"
            query_or_sql_list.append(query_or_sql)

        query_sql = str.join(" union \n", query_sql_list)
        # logger.info(f"{query_sql};")

        query_or_sql = str.join(" or \n", query_or_sql_list)
        # logger.info(f"select SQL_NO_CACHE * from siem_loophole_log_migration where {query_or_sql};")


        hex_host_set_sql = str.join("','", hex_host_set)
        hex_host_set_sql = f"`hex_host` in ('{hex_host_set_sql}')"
        port_set_sql = str.join(",", port_set)
        port_set_sql = f"`port` in ({port_set_sql})"
        domain_name_set_sql = str.join("','", domain_name_set)
        domain_name_set_sql = f"`domain_name` in ('{domain_name_set_sql}')"
        name_set_sql = str.join("','", name_set)
        name_set_sql = f"`name` in ('{name_set_sql}')"
        source_set_sql = str.join("','", source_set)
        source_set_sql = f"`source` in ('{source_set_sql}')"
        logger.info(f"select SQL_NO_CACHE * from siem_loophole_log_migration where {hex_host_set_sql} and \n{port_set_sql} and \n{domain_name_set_sql} and \n{name_set_sql} and \n{source_set_sql};")
