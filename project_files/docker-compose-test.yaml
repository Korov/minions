version: "3.8"
services:
  postgres:
    container_name: postgres-minions
    build:
      context: ./
      dockerfile: postgres-minions-test
    image: postgres-minions:1.0
    hostname: postgres-minions
    environment:
      - "POSTGRES_PASSWORD=postgres"
    ports:
      - "5432:5432"
    networks:
      minions:
        ipv4_address: 172.31.0.12

  demo:
    container_name: demo
    build:
      context: ./
      dockerfile: demo-test
    image: demo:1.0
    hostname: demo
    ports:
      - "8080:8080"
    links:
      - postgres:postgres-minions.com
    networks:
      minions:
        ipv4_address: 172.31.0.13

  mongo:
    container_name: mongo-minions
    image: mongo:4.4.0
    hostname: mongo-minions
    environment:
      - "MONGO_INITDB_ROOT_USERNAME=admin"
      - "MONGO_INITDB_ROOT_PASSWORD=mongo"
    ports:
      - "27017:27017"
    networks:
      minions:
        ipv4_address: 172.31.0.14

  redis:
    container_name: redis-minions
    image: redis:6.0.6
    hostname: redis-minions
    ports:
      - 6379:6379
    command:
      redis-server --requirepass redis --appendonly yes
    networks:
      minions:
        ipv4_address: 172.31.0.15

  zookeeper:
    container_name: zookeeper--minions
    image: wurstmeister/zookeeper:3.4.6
    hostname: zookeeper-minions
    ports:
      - "2181:2181"
    networks:
      minions:
        ipv4_address: 172.31.0.16

  kafka:
    container_name: kafka-minions
    image: wurstmeister/kafka:2.12-2.5.0
    hostname: kafka-minions
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    links:
      - zookeeper:zookeeper
    networks:
      minions:
        ipv4_address: 172.31.0.17

networks:
  minions:
    external:
      name: minions