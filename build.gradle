import com.github.spotbugs.snom.SpotBugsReport

buildscript {
    ext {
        springCloudVersion = "2020.0.1"
        springBootVersion = "2.4.3"
        swaggerVersion = "3.0.0"
        okhttpVersion = "4.9.1"
        lombokVersion = "1.18.18"
        fastjsonVersion = "1.2.75"
        snakeyamlVersion = "1.28"
        postgresVersion = "42.2.19"
        mybatisVersion = "2.1.4"
        spotbugsVersion = "4.6.0"
        dependencyManagementVersion = "1.0.11.RELEASE"
        flywayVersion = "7.7.0"
        scalaLibraryVersion = "2.13.5"
        kotlinVersion = "1.4.32"
    }
    repositories {
        mavenLocal()
        maven {
            url("https://maven.aliyun.com/repository/central")
        }
        maven {
            url("https://maven.aliyun.com/repository/gradle-plugin")
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.github.spotbugs.snom:spotbugs-gradle-plugin:${spotbugsVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:${dependencyManagementVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.thinkimi.gradle:mybatis-generator-plugin:2.2")
    }
}

//所有项目共用的设置
allprojects {
    group("org.minions")
    version("0.0.1-SNAPSHOT")

    // 此插件来实现类似maven中的dependencyManagement功能
    apply(plugin: "io.spring.dependency-management")
    apply(plugin: "jacoco")
    apply(plugin: "idea")

    //设置项目字符集为UTF-8
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        // 指定编译代码的版本
        sourceCompatibility = JavaVersion.VERSION_11
    }

    tasks.withType(Javadoc) {
        options.encoding = "UTF-8"
    }

    repositories {
        mavenLocal()
        maven {
            url("https://maven.aliyun.com/repository/central")
        }
        maven {
            url("https://maven.aliyun.com/repository/gradle-plugin")
        }
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
            mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        }
    }

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }
}

// 此配置对所有的子模块起作用
subprojects {
    apply(plugin: "java")
    apply(plugin: "com.github.spotbugs")

    spotbugs {
        ignoreFailures = true
    }
    spotbugsMain {
        reports(({
            html {
                enabled = true
                destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
                stylesheet = "fancy-hist.xsl"
            }
        } as Closure<NamedDomainObjectContainer<? extends SpotBugsReport>>))
    }
    spotbugsTest {
        reports(({
            html {
                enabled = true
                destination = file("$buildDir/reports/spotbugs/test/spotbugs.html")
                stylesheet = "fancy-hist.xsl"
            }
        } as Closure<NamedDomainObjectContainer<? extends SpotBugsReport>>))
    }

    test {
        useJUnitPlatform {
            includeEngines("junit-jupiter", "spek2")
        }
        finalizedBy(jacocoTestReport)
    }

    jacocoTestReport {
        dependsOn(test) // tests are required to run before generating the report
    }
}

